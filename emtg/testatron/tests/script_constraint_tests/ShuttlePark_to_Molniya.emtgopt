#EMTGv9 .emtgopt file version 2

#mission name
mission_name ShuttlePark_to_Molniya
#objective function type
#0: minimum deltaV
#1: minimum time
#2: maximum final mass
#3: maximize initial mass
#4: depart as late as possible in the window
#5: depart as early as possible in the window
#6: maximize orbit energy
#7: minimize launch mass
#8: arrive as early as possible
#9: arrive as late as possible
#10: minimum propellant (not the same as #2)
#11: maximum dry/wet ratio
#12: maximum arrival kinetic energy
#13: minimum BOL power
#14: maximize log_10(final mass)
#15: maximum log_e(final mass)
#16: maximum dry mass margin
#17: maximum dry mass
#18: maximum log_10(dry mass)
#19: maximum log_e(dry mass)
#20: minimize chemical fuel
#21: minimize chemical oxidizer
#22: minimize electric propellant
#23: minimize total propellant
#24: minimize waypoint tracking error
objective_type 0
#Journey associated with objective function (if applicable)
objective_journey 0
#Include the initial impulse in calculating the delta-v objective function?
include_initial_impulse_in_cost 1
#0: unbounded, 1: bounded total time (note that the global arrival date bound is by definition the same as the last journey's arrival date bound and is not duplicated
global_timebounded 1
#launch window open date (MJD)
launch_window_open_date 58438.0
#flight time bounds (days)
total_flight_time_bounds 0.0 2.0
#DLA in degrees
DLA_bounds -90.0 90.0
#RLA in degrees
RLA_bounds -2880.0 2880.0
#phase type
#0: MGALTS
#1: FBLTS
#2: MGALT
#3: FBLT
#4: PSBI
#5: PSFB
#6: MGAnDSMs
#7: CoastPhase
#8: SundmanCoastPhase
#9: variable phase type
mission_type 6
#NLP solver type
#0: SNOPT
#1: WORHP
NLP_solver_type 0
#NLP solver mode
#0: find feasible point only
#1: find optimal solution
#2: satisfy equality constraints
NLP_solver_mode 1
#Quiet NLP solver?
quiet_NLP 0
#Enable ACE feasible point finder?
ACE_feasible_point_finder 0
#Write every hop to the MBH archive, even if it is not an improvement?
MBH_always_write_archive 0
#include state vector in MBH archive file?
MBH_archive_state_vector 0
#quantity Max_not_improve for MBH
MBH_max_not_improve 100000
#maximum number of trials for MBH
MBH_max_trials 100000
#maximum run time for MBH, in seconds
MBH_max_run_time 600
#Maximum step size (uniform) or scale factor (other distributions)
MBH_max_step_size 1.0
#MBH hop probabilty distribution
#0: uniform
#1: Cauchy
#2: Pareto
#3: Gaussian
MBH_hop_distribution 2
#Pareto distribution alpha
MBH_Pareto_alpha 1.4
#Write every MBH improvement for later animation?
MBH_write_every_improvement 0
#probability of MBH time hop operation
MBH_time_hop_probability 0.05
#feasibility tolerance
snopt_feasibility_tolerance 1e-05
#optimality tolerance
snopt_optimality_tolerance 0.0001
#NLP max step
NLP_max_step 1.0
#NLP major iterations
snopt_major_iterations 8000
#NLP minor iterations
snopt_minor_iterations 500
#NLP max run time (seconds)
snopt_max_run_time 5
#Enable Scalatron?
enable_Scalatron 1
#Enable NLP chaperone?
enable_NLP_chaperone 0
#Seed MBH?
seed_MBH 1
#Skip first NLP run in an MBH process?
skip_first_nlp_run 0
#Stop NLP on goal attain?
NLP_stop_on_goal_attain 0
#Objective value at which NLP stops
NLP_objective_goal 0.0
#MBH RNG seed (negative number means system clock)
MBH_RNG_seed 0
#Print NLP movie frames?
print_NLP_movie_frames 0
#Quiet MBH?
quiet_basinhopping 0
#SPICE leap seconds kernel - required for SPICE to work
SPICE_leap_seconds_kernel naif0012.tls
#SPICE_reference_frame_kernel
SPICE_reference_frame_kernel pck00010.tpc
#Universe folder
universe_folder c:/emtg/testatron/Universe
#0: static, 1: SPICE (default to static if no SPICE file supplied for a body), 2: SplineEphem
ephemeris_source 2
#How many sample points should SplineEphem use per orbital period of each body?
SplineEphem_points_per_period 360
#Propagator type
#0: Keplerian propagator
#1: Integrated propagator
propagatorType 0
#Integrator type
#0: rk7813M adaptive step
#1: rk8 fixed step
integratorType 0
#adaptive step integrator tolerance
integrator_tolerance 1e-08
#integration step size (maximum for adaptive, fixed for fixed)
integration_time_step_size 864000.0
#number of timesteps per phase
num_timesteps 20
#number of spiral segments
spiral_segments 10
#Allow the mass at the beginning of the first journey to vary up to the allowed maximum?
allow_initial_mass_to_vary 0
#maximum possible mass of the spacecraft (kg)
maximum_mass 23077.0
#specific impulse of the engine used for low-thrust maneuvers
IspLT 3000.0
#minimum specific impulse for variable specific impulse problems
IspLT_minimum 1.0
#specific impulse of the engine used for impulsive maneuvers
IspChem 450.0
#thrust of the spacecraft, in Newtons
Thrust 0.1
#LV margin (as a fraction)
LV_margin 0.0
#LV adapter mass (kg)
LV_adapter_mass 0.0
#low-thrust engine type
#0: fixed thrust/Isp
#1: constant Isp, efficiency, EMTG computes input power
#2: choice of power model, constant efficiency, EMTG chooses Isp
#3: choice of power model, constant efficiency and Isp
#4: continuously-varying specific impulse
#5: custom thrust and mass flow rate polynomial
#6: NSTAR
#7: XIPS-25
#8: BPT-4000 High-Isp
#9: BPT-4000 High-Thrust
#10: BPT-4000 Ex-High-Isp
#11: NEXT high-Isp v9
#12: VASIMR (argon, using analytical model)
#13: Hall Thruster (Xenon, using analytical model)
#14: NEXT high-ISP v10
#15: NEXT high-thrust v10
#16: BPT-4000 MALTO
#17: NEXIS Cardiff 8-15-201
#18: H6MS Cardiff 8-15-2013
#19: BHT20K Cardiff 8-16-2013
#20: Aerojet HiVHAC EM
#21: 13 kW STMD Hall high-Isp (not available in open-source)
#22: 13 kW STMD Hall high-thrust (not available in open-source)
#23: NEXT TT11 High-Thrust
#24: NEXT TT11 High-Isp
#25: NEXT TT11 Expanded Throttle Table
#26: 13 kW STMD Hall high-Isp 10-1-2014 (not available in open-source)
#27: 13 kW STMD Hall medium-thrust 10-1-2014 (not available in open-source)
#28: 13 kW STMD Hall high-thrust 10-1-2014 (not available in open-source)
#29: 2D Throttle table
#30: 1D Throttle table high-thrust
#31: 1D Throttle table high-Isp
#32: 2D polynomial fit
engine_type 0
#number of thruster systems (used to be called number of engines)
number_of_electric_propulsion_systems 1
#percentage of time that engine can operate
engine_duty_cycle 1.0
#duty cycle type
#0: averaged
#1: realistic
duty_cycle_type 0
#scale factor to apply to thrust ONLY, not mass flow rate, can use to approximate cosine loss
thrust_scale_factor 1.0
#Power at 1 AU (kW)
power_at_1_AU 5.0
#power source type, 0: fixed, 1: solar
power_source_type 1
#Solar power model type
#0: classic Sauer model
#1: polynomial (0th order on the left)
solar_power_model_type 0
#solar power coefficients gamma_1 through gamma_5, if all gamma = [1 0 0 0 0], then solar power is a simple 1/r^2
solar_power_gamma 1.32077 -0.10848 -0.11665 0.10843 -0.01279 0.0 0.0
#power margin (fraction)
power_margin 0.0
#power system decay rate (fraction per year)
power_decay_rate 0.0
#Throttle sharpness (higher means more precise, lower means smoother)
throttle_sharpness 100.0
#Throttle logic mode
#0: maximum number of thrusters
#1: minimum number of thrusters
throttle_logic_mode 1
#spacecraft power coefficients A, B, and C
#represent the power requirements of the spacecraft at a distance r from the sun
#i.e. heaters, communications, etc
spacecraft_power_coefficients 0.0 0.0 0.0
#thrust polynomial coefficients
engine_input_thrust_coefficients 0.0 0.0 0.0 0.0 0.0 0.0 0.0
#mass flow rate polynomial coefficients
engine_input_mass_flow_rate_coefficients 0.0 0.0 0.0 0.0 0.0 0.0 0.0
#thruster input power bounds (kW)
engine_input_power_bounds 1.0 5.0
#Propulsion system efficiency (fraction)
user_defined_engine_efficiency 0.7
#spacecraft power model type
#0: P_sc = A + B/r + C/r^2
#1: P_sc = A if P > A, A + B(C - P) otherwise
spacecraft_power_model_type 0
#Isp for TCMs
TCM_Isp 200.0
#TCM magnitude post-launch (km/s)
TCM_post_launch 0.0
#TCM magnitude before flybys (km/s)
TCM_pre_flyby 0.0
#Post-DSM TCM magnitude as a fraction of DSM magnitude
TCM_maneuver_fraction 0.0
#Track ACS propellant consumption?
trackACS 0
#ACS propellant consumption (kg/day)
ACS_kg_per_day 0.0
#Bounds on final mass constraints
final_mass_constraint_bounds 0.0 0.0
#Constrain final wet mass?
constrain_final_mass 0
#Constrain dry mass?
constrain_dry_mass 0
#Constrain electric propellant tank?
enable_electric_propellant_tank_constraint 0
#Electric propellant tank capacity (kg)
maximum_electric_propellant 1000.0
#Electric propellant margin (fraction)
electric_propellant_margin 0.0
#Constrain chemical propellant?
enable_chemical_propellant_tank_constraint 0
#Chemical fuel tank capacity (kg)
maximum_chemical_fuel 1000.0
#Chemical oxidizer tank capacity (kg)
maximum_chemical_oxidizer 1000.0
#Bipropellant mixture ratio
bipropellant_mixture_ratio 0.925
#Chemical propellant margin (fraction)
chemical_propellant_margin 0.0
#Spacecraft object input type
#0: Assemble from libraries
#1: Read .emtg_spacecraftoptions file
#2: Assemble from missionoptions object
SpacecraftModelInput 2
#HardwarePath
HardwarePath C:\Utilities\HardwareModels\
#solar radiation pressure?
perturb_SRP 0
#third body perturbations?
perturb_thirdbody 0
#J2?
perturb_J2 0
#spacecraft area (for SRP, in m^2)
spacecraft_area 1.0
#Coefficient of reflectivity
coefficient_of_reflectivity 1.0
#Forced post-launch coast, in days
forced_post_launch_coast 0.0
#Forced pre-flyby coast, in days
forced_pre_flyby_coast 0.0
#Forced post-flyby coast, in days
forced_post_flyby_coast 0.0
#Path to waypoint file
waypoint_file_path ./banana.ephemeris
#Path to covariance file
covariance_file_path ./banana.ephemeris
#state representation for periapse boundary conditions (Cartesian, SphericalRADEC, SphericalAZFPA)
PSFBstateRepresentation 2
#state representation for parallel shooting (Cartesian, SphericalRADEC, SphericalAZFPA)
PeriapseBoundaryStateRepresentation 1
#reference frame for output file (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar)
output_file_frame 1
#Override default output file name?
override_default_output_file_name 0
#User-defined output file name
forced_output_file_name forced_output_file_name
#Output ephemeris for time spent waiting between journeys?
output_dormant_journeys 0
#How long to output an ephemeris after the mission end (days)
post_mission_wait_time 0.0
#Override the working directory?
override_working_directory 0
#User-defined working directory
forced_working_directory ..//EMTG_v9_Results
#Create a mission subfolder?
override_mission_subfolder 0
#Mission subfolder
forced_mission_subfolder mission_subfolder
#Shorten output file names?
short_output_file_names 0
#Generate forward-integrated ephemeris?
generate_forward_integrated_ephemeris 0
#Add control switch line to ephemeris?
add_control_switch_line_to_ephemeris 0
#Append mass to ephemeris output?
append_mass_to_ephemeris_output 0
#Append control vector to ephemeris output?
append_control_to_ephemeris_output 0
#Append thrust magnitude to ephemeris output?
append_thrust_to_ephemeris_output 0
#Append mass flow rate to ephemeris output?
append_mdot_to_ephemeris_output 0
#Append Isp to ephemeris output?
append_Isp_to_ephemeris_output 0
#Append active power to ephemeris output?
append_active_power_to_ephemeris_output 0
#Append number of active propulsion systems to ephemeris output?
append_number_of_active_engines_to_ephemeris_output 0
#Append throttle level to ephemeris output?
append_throttle_level_to_ephemeris_output 0
#Close program after completion?
background_mode 0
#Output STMs?
output_STMs 0
#Output maneuver and target spec files?
output_maneuver_and_target_spec_files 0
#Stop after a particular journey? (if this value is greater than the number of journeys, do the whole mission)
stop_after_journey 32767
#which inner loop solver to run?
#0: none, evaluate trialX
#1: run MBH
#2: run constrained DE
#3: run NLP using trialX as initial guess
#4: filament walker
run_inner_loop 3
#Check derivatives using NLP finite differencing?
check_derivatives 0
#Enter any user data that should be appended to the .emtg file.
#This is typically used in python wrappers
user_data 



BEGIN_JOURNEY

#Journey name
journey_name TransferToMolniya
#Journey central body name
journey_central_body Earth
#destination list, as indices from the Universe file
destination_list 0 0
#flyby sequence, as indices from the Universe file
sequence
#phase type
#0: MGALTS
#1: FBLTS
#2: MGALT
#3: FBLT
#4: PSBI
#5: PSFB
#6: MGAnDSMs
#7: CoastPhase
#8: SundmanCoastPhase
phase_type 2
#impulses per phase
impulses_per_phase 3
#Override this journey's number of steps?
override_num_steps 0
#Number of time steps for this journey, if overriden
number_of_steps 20
#Journey override global duty cycle
override_duty_cycle 0
#Journey duty cycle
duty_cycle 0.0
#override propagator type?
override_PropagatorType 0
#propagator type
propagatorType 0
#Override global integration step size?
override_integration_step_size 0
#integration step size (s)
integration_step_size 1.0
#Override journey flyby altitude?
override_flyby_altitude_bounds 0
#Lower and upper bound on journey flyby altitude (only applies to the departure flyby, if there is one)
flyby_altitude_bounds 1000.0 10000.0
#Override journey flyby altitude?
PeriapseArrival_override_altitude 0
#Lower and upper bound on journey flyby altitude (km)
PeriapseArrival_altitude_bounds 300.0 100000.0
#PeriapseDeparture altitude bounds (in km)
PeriapseDeparture_altitude_bounds 300.0 300.0
#number of interior control points for parallel shooting phase types
num_interior_control_points 1
#coast phase match point fraction
CoastPhaseMatchPointFraction 0.5
#coast phase forward integration step length (seconds)
CoastPhaseForwardIntegrationStepLength 86400.0
#coast phase backward integration step length (seconds)
CoastPhaseBackwardIntegrationStepLength 86400.0
#Journey-end TCM magnitude (km/s)
journey_end_TCM 0.0
#Enable periapse burns in ephemeris pegged flybys?
enable_periapse_burns 0
#Bound the departure epoch?
bounded_departure_date 0
#does the journey have time bounds?
#0: unbounded
#1: bounded flight time
#2: bounded arrival date
#3: bounded aggregate flight time
timebounded 0
#Journey departure epoch bounds (MJD, two entries)
departure_date_bounds 0.0 0.0
#Journey wait time bounds (days)
wait_time_bounds 0.0 0.1
#Journey flight time bounds (days)
flight_time_bounds 0.0 0.0
#Journey arrival date bounds (MJD, two entries)
arrival_date_bounds 53982.0 60000.0
#journey departure type
#0: launch or direct insertion
#1: depart from parking orbit (you can use this one in place of a launch vehicle model, and the departure burn will be done with the EDS motor)
#2: free direct departure, i.e. do not burn to get the departure v_infinity (used for when operations about a small body are not modeled but the departure velocity is known)
#3: flyby (only valid for successive journeys)
#4: flyby with fixed v-infinity-out (only valid for successive journeys)
#5: spiral-out from circular orbit (low-thrust missions only)
#6: zero-turn flyby (for small bodies)
departure_type 0
#what are the bounds on the initial impulse for each journey in km/s\
#you can set a very high upper bound if you are using a launchy vehicle model - the optimizer will find the correct value
initial_impulse_bounds 1e-08 2.0
#one entry for each element
departure_elements_vary_flag 0 0 0 0 0 0
#cartesian state or SMA, ECC, INC, RAAN, AOP, TA
departure_elements 6405.501115241637 1.325544010117307e-13 -7.743371915891473e-16 1.319510042815117e-16 6.404529148733144 4.826158879029262
#bounds on elements or state components, two entries for each element
departure_elements_bounds 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0
#Reference epoch (MJD) for journey departure elements
departure_elements_reference_epoch 58438.0
#reference frame for journey departure elements (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar)
departure_elements_frame 0
#Allow journey departure free point boundary to propagate (otherwise it is a fixed waypoint)
AllowJourneyFreePointDepartureToPropagate 1
#upper bound on starting mass increment (negative number indicates mass drop) [kg]
maximum_starting_mass_increment 0.0
#lower bound on starting mass increment (negative number indicates mass drop) [kg]
minimum_starting_mass_increment 0.0
#starting mass increment (negative number indicates mass drop) [kg]
fixed_starting_mass_increment 0.0
#ending mass increment (negative number indicates mass drop) [kg]
fixed_ending_mass_increment 0.0
#Vary initial mass increment?
variable_mass_increment 0
#Constrain initial mass?
constrain_initial_mass 0
#If initial mass for this journey is constrained, enter the constraint value here.
maximum_initial_mass 0.0
#journey departure boundary class
#0: Ephemeris-pegged (default EMTG)
#1: Free point
#2: Ephemeris-referenced
#3: Periapse
departure_class 1
#journey departure ellipsoid axes (3)
departure_ellipsoid_axes 1000000.0 1000000.0 1000000.0
#journey arrival type
#0: insertion into parking orbit (use chemical Isp)
#1: rendezvous (use chemical Isp)
#2: intercept with bounded V_infinity
#3: low-thrust rendezvous (does not work if terminal phase is not low-thrust)
#4: match final v-infinity vector
#5: match final v-infinity vector (low-thrust)
#6: capture spiral
arrival_type 1
#one entry for each element
arrival_elements_vary_flag 1 1 1 1 1 1
#cartesian state or SMA, ECC, INC, RAAN, AOP, TA
arrival_elements 0.0 0.0 0.0 0.0 0.0 0.0
#bounds on elements or state components, two entries for each element
arrival_elements_bounds -100000.0 100000.0 -100000.0 100000.0 -100000.0 100000.0 -20.0 20.0 -20.0 20.0 -20.0 20.0
#Reference epoch (MJD) for journey arrival elements
arrival_elements_reference_epoch 58438.0
#reference frame for journey arrival elements (0: J2000_ICRF, 1: J2000_BCI, 2: J2000_BCF, 3: TrueOfDate_BCI, 4: TrueOfDate_BCF, 5: Principle Axes, 6: Topocentric, 7: Polar)
arrival_elements_frame 0
#Allow journey arrival free point boundary to propagate (otherwise it is a fixed waypoint)
AllowJourneyFreePointArrivalToPropagate 1
#Bounds on this journey's final velocity (in km/s)
final_velocity 0.0 20.0 0.0
#Journey forced terminal coast (in days)
forced_terminal_coast 0.0
#Journey forced initial coast (in days)
forced_initial_coast 0.0
#journey arrival boundary class
#0: Ephemeris-pegged (default EMTG)
#1: Free point
#2: Ephemeris-referenced
#3: Periapse
arrival_class 1
#journey arrival ellipsoid axes (3)
arrival_ellipsoid_axes 1000000.0 1000000.0 1000000.0
#Starting orbital radius for an escape spiral at the beginning of the journey (km)
escape_spiral_starting_radius 6678.0
#Final orbital radius for a capture spiral at the end of the journey (km)
capture_spiral_final_radius 6678.0
#Journey-end delta-v (km/s)
journey_end_deltav 0.0
#Propulsion system for journey-end maneuver
#0: Monoprop chemical
#1: Biprop chemical
#2: Electric
journey_end_propulsion_system 0
#Which bodies are used for third-body perturbation?
#Expressed as indices in the Universe file
perturbation_bodies
#Stage after departure?
stage_after_departure 0
#Stage before arrival?
stage_before_arrival 0
#Stage after arrival?
stage_after_arrival 0
#Freeze this journey's decision variables?
freeze_decision_variables 0
#SMA (in km) for ephemeris pegged orbit insertion
ephemeris_pegged_orbit_insertion_SMA 6678.0
#ECC for ephemeris pegged orbit insertion
ephemeris_pegged_orbit_insertion_ECC 1e-10

#Maneuver constraint code
#Works for absolute and relative epochs and also magnitudes
BEGIN_MANEUVER_CONSTRAINT_BLOCK
END_MANEUVER_CONSTRAINT_BLOCK


#Boundary constraint code
BEGIN_BOUNDARY_CONSTRAINT_BLOCK
p0_arrival_apoapsedistance_45816.476nmi_45816.477nmi
p0_arrival_periapsedistance_7313.396000000001nmi_7313.397nmi
p0_arrival_INC_63.4deg_63.41deg_ICRF
p0_arrival_AOP_270deg_270.1deg_ICRF
END_BOUNDARY_CONSTRAINT_BLOCK


#Phase distance constraint code
BEGIN_PHASE_DISTANCE_CONSTRAINT_BLOCK
END_PHASE_DISTANCE_CONSTRAINT_BLOCK

#trial decision vector
BEGIN_TRIALX
p0MGAnDSMsFreePointDirectInsertion: event left state x,6405.50111524163730791770
p0MGAnDSMsFreePointDirectInsertion: event left state y,0.00000000000023255440
p0MGAnDSMsFreePointDirectInsertion: event left state z,0.00000000000009922566
p0MGAnDSMsFreePointDirectInsertion: event left state xdot,0.00000000000010013195
p0MGAnDSMsFreePointDirectInsertion: event left state ydot,6.40452914873324452572
p0MGAnDSMsFreePointDirectInsertion: event left state zdot,4.82615887902936258058
p0MGAnDSMsFreePointDirectInsertion: event left state mass,23077.00000000000000000000
p0MGAnDSMsFreePointDirectInsertion: event left state epoch,58438.03123061687801964581
p0MGAnDSMsFreePointDirectInsertion: magnitude of outgoing velocity asymptote,0.00000001000000000000
p0MGAnDSMsFreePointDirectInsertion: RA of departure asymptote,-32.57542742587440187663
p0MGAnDSMsFreePointDirectInsertion: DEC of departure asymptote,-1.36017975688679637614
p0MGAnDSMsFreePointDirectInsertion: virtual chemical fuel,0.00050640272666198783
p0MGAnDSMsFreePointDirectInsertion: virtual chemical oxidizer,-0.00203031327127111078
p0MGAnDSMs: phase flight time,1.29465294018080712135
p0MGAnDSMsFreePointChemRendezvous: event left state x,36377.18103645558585412800
p0MGAnDSMsFreePointChemRendezvous: event left state y,16169.88504570933582726866
p0MGAnDSMsFreePointChemRendezvous: event left state z,56634.16352064636885188520
p0MGAnDSMsFreePointChemRendezvous: event left state xdot,-0.45739295672598956344
p0MGAnDSMsFreePointChemRendezvous: event left state ydot,0.98442421376483579820
p0MGAnDSMsFreePointChemRendezvous: event left state zdot,1.49524314605849895088
p0MGAnDSMsFreePointChemRendezvous: event left state mass,9206.58921858546636940446
p0MGAnDSMsFreePointChemRendezvous: V_infinity_x,0.00000000000000888178
p0MGAnDSMsFreePointChemRendezvous: V_infinity_y,-0.00000000000000976996
p0MGAnDSMsFreePointChemRendezvous: V_infinity_z,0.00000000000000754952
p0MGAnDSMsFreePointChemRendezvous: virtual chemical fuel,0.00492688795867199641
p0MGAnDSMsFreePointChemRendezvous: virtual chemical oxidizer,-0.00000000352320334277
p0MGAnDSMs: virtual chemical fuel,7205.40817097317176376237
p0MGAnDSMs: virtual chemical oxidizer,6665.00255815035870909924
p0MGAnDSMsForwardSubPhase0: burn index,0.06221278948323104990
p0MGAnDSMsForwardSubPhase0: DSM x component,2.60948082184913765502
p0MGAnDSMsForwardSubPhase0: DSM y component,0.43951650707990097544
p0MGAnDSMsForwardSubPhase0: DSM z component,0.51080897081925158432
p0MGAnDSMsForwardSubPhase1: burn index,0.51168501840245017576
p0MGAnDSMsForwardSubPhase1: DSM x component,-0.16870095926802974873
p0MGAnDSMsForwardSubPhase1: DSM y component,0.27325817503642824136
p0MGAnDSMsForwardSubPhase1: DSM z component,-1.09340043688680133016
p0MGAnDSMsBackwardSubPhase0: burn index,0.14715183659335240307
p0MGAnDSMsBackwardSubPhase1: burn index,0.27895035552086644426
p0MGAnDSMsBackwardSubPhase1: DSM x component,-0.02613241052628012540
p0MGAnDSMsBackwardSubPhase1: DSM y component,-0.21809089233362222160
p0MGAnDSMsBackwardSubPhase1: DSM z component,-0.01935589727067288379
END_TRIALX

END_JOURNEY